// This file has been autogenerated from a class added in the UI designer.
using System.Collections;
using System.Collections.Generic;
using System.IO;
using SQLite;

namespace ToDoList
{
    internal class ApplicationDatabase
    {
        SQLiteConnection _connection;

        internal ApplicationDatabase()
        {
            _connection = OpenDatabase();
        }



        static internal void CreateDatabase()
        {
            var path = Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.Personal), "todo.db3");
            var database = new SQLiteConnection(path);
            CreateTableResult createResult = database.CreateTable<ToDoItem>();
            System.Console.WriteLine(createResult);
            database.Close();
        }

        static internal SQLiteConnection OpenDatabase()
        {

            var path = Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.Personal), "todo.db3");
            SQLiteConnection database = new SQLiteConnection(path);
            CreateTableResult createResult = database.CreateTable<ToDoItem>();
            return database;
        }

        internal void Close()
        {
            _connection.Close();
        }

        internal void Open()
        {
            _connection = OpenDatabase();
        }

        internal IEnumerable<ToDoItem> GetToDoItems()
        {
            var itemsTable = _connection.Table<ToDoItem>();
            return itemsTable.OrderBy(item => item.Id);
        }

        internal int Add(ToDoItem newItem)
        {
            return _connection.Insert(newItem);
        }

        internal int Delete(ToDoItem toRemove)
        {
            return _connection.Delete<ToDoItem>(toRemove.Id);
        }
    }
}